.dnd-page.dnd-character {
	display: flex;
	flex-direction: row;
	position: relative;
	width: 100%;
	height: 100%;

	&.mouse-scrolling {
		user-select: none;
	}

	.page-container {
		width: 100%;
	}

	.main-character-container {
		box-shadow: 0px 0px 15px @rsBlack;
		z-index: 4;
	}
	
	.information-container {
		display: grid;
		grid-auto-flow: column;
		width: 100%;
		overflow: auto;
		overscroll-behavior-x: contain;
		scroll-snap-type: x mandatory;
		scroll-behavior: smooth;
		gap: 0px;
		z-index: 2;

		.column {
			box-shadow: inset 0px 0px 10px @rsBlack;
		}
	}

	.initiative-container {
		box-shadow: inset 0px 0px 10px @rsBlack;
		z-index: 3;
		overflow: hidden;
		width: 0px;
		transition: width .5s;
		flex-shrink: 0;

		&.combat {
			width: 56px;
		}

		.action {
			margin: 4px 4px;
			width: 48px;
			height: 48px;
			font-size: 20px;
		}
	}

	.info {
		scroll-snap-align: start;
	}
	
	.character-container {
		height: 100%;
		flex-shrink: 0;
		width: 420px;
		overflow-y: auto;
	}

	.character-table-container {
		box-shadow: inset 0px 0px 8px @rsBlack;
		height: 100%;
		position: relative;
		display: block;
		flex-shrink: 0;
		flex-grow: 0;
		overflow-y: auto;

		& > * {
			height: 100%;
		}
	}

	@media only screen and (max-width: 600px) {
		.character-table-container {
			width: 200px;
		}
	}

	@media only screen and (max-width: 800px) {
		.character-table-container {
			width: 300px;
		}
	}

	@media only screen and (max-width: 1000px) {
		.character-table-container {
			width: 400px;
		}
	}

	@media only screen and (max-width: 1200px) {
		.character-table-container {
			width: 600px;
		}
	}

	@media only screen and (min-width: 1201px) {
		.character-table-container {
			width: 800px;
		}
	}

	.column {
		flex-shrink: 0;
		flex-grow: 0;
	}

	.character-container.nearby {
		/*
		& > .widgets.container {
			border: 1px solid transparent;
			transition: border-color .5s;
		}
		*/

		.self > .widgets.container {
			border-color: @rsLightBlue;
			box-shadow: 0px 0px 10px inset @rsLightBlue !important;
		}

		.combat_turn > .widgets.container {
			border-color: @rsOrange !important;
			box-shadow: 0px 0px 10px inset @rsOrange !important;
		}

		.npc .entity-heading button.property {
			border-left: 7px solid @rsBlue !important;
		}

		.hostile .entity-heading button.property {
			color: @rsLightRed !important;
			border-left: 7px solid @rsRed !important;
		}
	}
}
